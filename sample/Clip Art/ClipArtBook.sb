' Small Clip Art Book
' Copyright © 2017-2020 Nonki Takahashi.  The MIT License.
' Program ID FMD016

GraphicsWindow.Title = "Small Clip Art Book"
GraphicsWindow.Width = 598
GraphicsWindow.Height = 428
SB_Workaround()
' initialize shapes
Shapes_Init_Book()
angle = 0 ' dummy
' add shapes
scale = 1
name = "Book"
Sprite_Add()
Shapes_Init_Horse()
scale = 0.5
name = "Horse"
Sprite_Add()

Sub SB_RotateWorkaround
  ' Small Basic | rotate workaround For Silverlight
  ' param shp - current shape
  ' param x, y - original coordinate
  ' param _alpha - angle [radian]
  ' returns x, y - workaround coordinate
  If shp["func"] = "tri" Then
    x1 = -Math.Floor(shp["x3"] / 2)
    y1 = -Math.Floor(shp["y3"] / 2)
  ElseIf shp["func"] = "line" Then
    x1 = -Math.Floor(Math.Abs(shp["x1"] - shp["x2"]) / 2)
    y1 = -Math.Floor(Math.Abs(shp["y1"] - shp["y2"]) / 2)
  EndIf
  ox = x - x1
  oy = y - y1
  x = x1 * Math.Cos(_alpha) - y1 * Math.Sin(_alpha) + ox
  y = x1 * Math.Sin(_alpha) + y1 * Math.Cos(_alpha) + oy
EndSub

Sub SB_Workaround
  ' Small Basic | workaround for Silverlight / SBD
  ' return silverlight - "True" if in remote
  ' return sbd - "True" if Small Basic Desktop
  color = GraphicsWindow.GetPixel(0, 0)
  sbd = "False"
  If Text.GetLength(color) > 7 Then
    silverlight = "True"
    msWait = 300
  Else
    silverlight = "False"
    _gw = GraphicsWindow.Width
    _gh = GraphicsWindow.Height
    If (_gw = 624) And (_gh = 441) Then
      sbd = "True"
    EndIf
  EndIf
EndSub

Sub Shapes_CalcWidthAndHeight
  ' Shapes | calculate total width and height of shapes
  ' param shape[] - shape array
  ' return shWidth, shHeight - total size of shapes
  For i = 1 To Array.GetItemCount(shape)
    shp = shape[i]
    If shp["func"] = "tri" Or shp["func"] = "line" Then
      xmin = shp["x1"]
      xmax = shp["x1"]
      ymin = shp["y1"]
      ymax = shp["y1"]
      If shp["x2"] < xmin Then
        xmin = shp["x2"]
      EndIf
      If xmax < shp["x2"] Then
        xmax = shp["x2"]
      EndIf
      If shp["y2"] < ymin Then
        ymin = shp["y2"]
      EndIf
      If ymax < shp["y2"] Then
        ymax = shp["y2"]
      EndIf
      If shp["func"] = "tri" Then
        If shp["x3"] < xmin Then
          xmin = shp["x3"]
        EndIf
        If xmax < shp["x3"] Then
          xmax = shp["x3"]
        EndIf
        If shp["y3"] < ymin Then
          ymin = shp["y3"]
        EndIf
        If ymax < shp["y3"] Then
          ymax = shp["y3"]
        EndIf
      EndIf
      shp["width"] = xmax - xmin
      shp["height"] = ymax - ymin
    EndIf
    If i = 1 Then
      shWidth = shp["x"] + shp["width"]
      shHeight = shp["y"] + shp["height"]
    Else
      If shWidth < shp["x"] + shp["width"] Then
        shWidth = shp["x"] + shp["width"]
      EndIf
      If shHeight < shp["y"] + shp["height"] Then
        shHeight = shp["y"] + shp["height"]
      EndIf
    EndIf
    shape[i] = shp
  EndFor
EndSub

Sub Shapes_Init_Book
  ' Shapes | Initialize shapes data
  ' return shX, shY - current position of shapes
  ' return shape - array of shapes
  shX = 0   ' x offset
  shY = 20  ' y offset
  shape = ""
  shape[1] = "pw=0;bc=#880000;func=ell;width=50;height=50;x=179;y=34;"
  shape[2] = "pw=0;bc=#880000;func=rect;width=20;height=260;x=179;y=54;"
  shape[3] = "pw=0;bc=#660000;func=ell;width=50;height=50;x=179;y=294;"
  shape[4] = "pw=0;bc=#660000;func=rect;width=200;height=50;x=199;y=294;"
  shape[5] = "pw=0;bc=DarkRed;func=rect;width=200;height=260;x=199;y=34;"
  shape[6] = "pw=0;bc=#CCCCCC;func=ell;width=40;height=40;x=183;y=294;"
  shape[7] = "pw=0;bc=#CCCCCC;func=rect;width=166;height=40;x=203;y=294;"
  shape[8] = "pw=0;bc=#DDDDDD;func=rect;width=20;height=40;x=369;y=294;"
  shape[9] = "pw=0;bc=#CCCCCC;func=rect;width=16.52;height=0.3;x=369;y=294;"
  shape[10] = "pw=0;bc=#CCCCCC;func=tri;x1=20;y1=0;x2=16.52;y2=0.3;x3=16.52;y3=0;x=369;y=294;"
  shape[11] = "pw=0;bc=#CCCCCC;func=rect;width=13.15;height=0.9;x=369;y=294.3;"
  shape[12] = "pw=0;bc=#CCCCCC;func=tri;x1=16.52;y1=0.3;x2=13.15;y2=1.2;x3=13.15;y3=0.3;x=369;y=294;"
  shape[13] = "pw=0;bc=#CCCCCC;func=rect;width=10;height=1.47;x=369;y=295.2;"
  shape[14] = "pw=0;bc=#CCCCCC;func=tri;x1=13.15;y1=1.2;x2=10;y2=2.67;x3=10;y3=1.2;x=369;y=294;"
  shape[15] = "pw=0;bc=#CCCCCC;func=rect;width=7.14;height=1.99;x=369;y=296.67;"
  shape[16] = "pw=0;bc=#CCCCCC;func=tri;x1=10;y1=2.67;x2=7.14;y2=4.67;x3=7.14;y3=2.67;x=369;y=294;"
  shape[17] = "pw=0;bc=#CCCCCC;func=rect;width=4.67;height=2.46;x=369;y=298.67;"
  shape[18] = "pw=0;bc=#CCCCCC;func=tri;x1=7.14;y1=4.67;x2=4.67;y2=7.14;x3=4.67;y3=4.67;x=369;y=294;"
  shape[19] = "pw=0;bc=#CCCCCC;func=rect;width=2.67;height=2.85;x=369;y=301.14;"
  shape[20] = "pw=0;bc=#CCCCCC;func=tri;x1=4.67;y1=7.14;x2=2.67;y2=10;x3=2.67;y3=7.14;x=369;y=294;"
  shape[21] = "pw=0;bc=#CCCCCC;func=rect;width=1.2;height=3.15;x=369;y=304;"
  shape[22] = "pw=0;bc=#CCCCCC;func=tri;x1=2.67;y1=10;x2=1.2;y2=13.15;x3=1.2;y3=10;x=369;y=294;"
  shape[23] = "pw=0;bc=#CCCCCC;func=rect;width=0.3;height=3.36;x=369;y=307.15;"
  shape[24] = "pw=0;bc=#CCCCCC;func=tri;x1=1.2;y1=13.15;x2=0.3;y2=16.52;x3=0.3;y3=13.15;x=369;y=294;"
  shape[25] = "pw=0;bc=#CCCCCC;func=rect;width=0;height=3.47;x=369;y=310.52;"
  shape[26] = "pw=0;bc=#CCCCCC;func=tri;x1=0.3;y1=16.52;x2=0;y2=20;x3=0;y3=16.52;x=369;y=294;"
  shape[27] = "pw=0;bc=#CCCCCC;func=rect;width=0.3;height=3.47;x=369;y=314;"
  shape[28] = "pw=0;bc=#CCCCCC;func=tri;x1=0;y1=20;x2=0.3;y2=23.47;x3=0.3;y3=20;x=369;y=294;"
  shape[29] = "pw=0;bc=#CCCCCC;func=rect;width=1.2;height=3.36;x=369;y=317.47;"
  shape[30] = "pw=0;bc=#CCCCCC;func=tri;x1=0.3;y1=23.47;x2=1.2;y2=26.84;x3=1.2;y3=23.47;x=369;y=294;"
  shape[31] = "pw=0;bc=#CCCCCC;func=rect;width=2.67;height=3.15;x=369;y=320.84;"
  shape[32] = "pw=0;bc=#CCCCCC;func=tri;x1=1.2;y1=26.84;x2=2.67;y2=30;x3=2.67;y3=26.84;x=369;y=294;"
  shape[33] = "pw=0;bc=#CCCCCC;func=rect;width=4.67;height=2.85;x=369;y=324;"
  shape[34] = "pw=0;bc=#CCCCCC;func=tri;x1=2.67;y1=30;x2=4.67;y2=32.85;x3=4.67;y3=30;x=369;y=294;"
  shape[35] = "pw=0;bc=#CCCCCC;func=rect;width=7.14;height=2.46;x=369;y=326.85;"
  shape[36] = "pw=0;bc=#CCCCCC;func=tri;x1=4.67;y1=32.85;x2=7.14;y2=35.32;x3=7.14;y3=32.85;x=369;y=294;"
  shape[37] = "pw=0;bc=#CCCCCC;func=rect;width=9.99;height=1.99;x=369;y=329.32;"
  shape[38] = "pw=0;bc=#CCCCCC;func=tri;x1=7.14;y1=35.32;x2=9.99;y2=37.32;x3=9.99;y3=35.32;x=369;y=294;"
  shape[39] = "pw=0;bc=#CCCCCC;func=rect;width=13.15;height=1.47;x=369;y=331.32;"
  shape[40] = "pw=0;bc=#CCCCCC;func=tri;x1=9.99;y1=37.32;x2=13.15;y2=38.79;x3=13.15;y3=37.32;x=369;y=294;"
  shape[41] = "pw=0;bc=#CCCCCC;func=rect;width=16.52;height=0.9;x=369;y=332.79;"
  shape[42] = "pw=0;bc=#CCCCCC;func=tri;x1=13.15;y1=38.79;x2=16.52;y2=39.69;x3=16.52;y3=38.79;x=369;y=294;"
  shape[43] = "pw=0;bc=#CCCCCC;func=rect;width=19.99;height=0.3;x=369;y=333.69;"
  shape[44] = "pw=0;bc=#CCCCCC;func=tri;x1=16.52;y1=39.69;x2=19.99;y2=40;x3=19.99;y3=39.69;x=369;y=294;"
  shape[45] = "pw=0;bc=#999999;fs=24;fn=Meiryo;fb=True;fi=False;func=text;text=小さな図案集;x=220;y=90;"
EndSub

Sub Shapes_Init_Horse
  ' Shapes | Initialize shapes data
  ' return shX, shY - current position of shapes
  ' return shape - array of shapes
  shX = 245 ' x offset
  shY = 165 ' y offset
  shape = ""
  shape[1] = "func=rect;x=36;y=78;width=126;height=47;bc=#999999;pw=0;"
  shape[2] = "func=rect;x=37;y=124;width=9;height=74;bc=#999999;pw=0;"
  shape[3] = "func=rect;x=50;y=124;width=9;height=74;bc=#999999;pw=0;"
  shape[4] = "func=rect;x=139;y=124;width=9;height=74;bc=#999999;pw=0;"
  shape[5] = "func=rect;x=152;y=124;width=9;height=74;bc=#999999;pw=0;"
  shape[6] = "func=rect;x=31;y=21;width=31;height=61;angle=348;bc=#999999;pw=0;"
  shape[7] = "func=rect;x=0;y=16;width=55;height=27;bc=#999999;pw=0;"
  shape[8] = "func=tri;x=59;y=12;x1=7;y1=0;x2=0;y2=24;x3=15;y3=24;angle=86;bc=#999999;pw=0;"
  shape[9] = "func=tri;x=61;y=24;x1=7;y1=0;x2=0;y2=24;x3=15;y3=24;angle=86;bc=#999999;pw=0;"
  shape[10] = "func=tri;x=64;y=35;x1=7;y1=0;x2=0;y2=24;x3=15;y3=24;angle=86;bc=#999999;pw=0;"
  shape[11] = "func=tri;x=67;y=47;x1=7;y1=0;x2=0;y2=24;x3=15;y3=24;angle=86;bc=#999999;pw=0;"
  shape[12] = "func=tri;x=69;y=59;x1=7;y1=0;x2=0;y2=24;x3=15;y3=24;angle=86;bc=#999999;pw=0;"
  shape[13] = "func=ell;x=39;y=0;width=9;height=22;bc=#999999;pw=0;"
  shape[14] = "func=ell;x=50;y=0;width=9;height=22;bc=#999999;pw=0;"
  shape[15] = "func=ell;x=168;y=75;width=9;height=39;angle=321;bc=#999999;pw=0;"
  shape[16] = "func=ell;x=36;y=22;width=9;height=9;bc=DarkRed;pw=0;"
EndSub

Sub Sprite_Add
  ' Sprite | add shapes to a sprite
  ' param name - sprite name
  ' param shX, shY - origin of shape array
  ' param scale - to resize 
  ' param shape[] - shape array
  ' param nSprite - number of sprite
  ' return nSprite - updated number of sprite
  ' return sprite[] - sprite array
  Stack.PushValue("local", i)
  Stack.PushValue("local", x)
  Stack.PushValue("local", y)
  nSprite = nSprite + 1
  spr = ""
  spr["name"] = name
  spr["x"] = shX
  spr["y"] = shY
  spr["angle"] = 0
  spr["dir"] = 1
  Shapes_CalcWidthAndHeight()
  spr["width"] = shWidth
  spr["height"] = shHeight
  spr["cx"] = shWidth / 2
  spr["cy"] = shHeight / 2
  s = scale
  spr["scale"] = s
  For i = 1 To Array.GetItemCount(shape)
    shp = shape[i]
    GraphicsWindow.PenWidth = shp["pw"] * s
    If shp["pw"] > 0 Then
      GraphicsWindow.PenColor = shp["pc"]
    EndIf
    If Text.IsSubText("rect|ell|tri|text|btn", shp["func"]) Then
      GraphicsWindow.BrushColor = shp["bc"]
    EndIf
    If Text.IsSubText("text|btn", shp["func"]) Then
      If silverlight Then
        fs = Math.Floor(shp["fs"] * 0.9)
      Else
        fs = shp["fs"]
      EndIf
      GraphicsWindow.FontSize = fs * s
      GraphicsWindow.FontName = shp["fn"]
      If shp["fb"] = "False" Then
        GraphicsWindow.FontBold = "False"
      Else
        GraphicsWindow.FontBold = "True"
      EndIf
    EndIf
    If shp["func"] = "rect" Then
      shp["obj"] = Shapes.AddRectangle(shp["width"] * s, shp["height"] * s)
    ElseIf shp["func"] = "ell" Then
      shp["obj"] = Shapes.AddEllipse(shp["width"] * s, shp["height"] * s)
    ElseIf shp["func"] = "tri" Then
      shp["obj"] = Shapes.AddTriangle(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s, shp["x3"] * s, shp["y3"] * s)
    ElseIf shp["func"] = "line" Then
      shp["obj"] = Shapes.AddLine(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s)
    ElseIf shp["func"] = "text" Then
      shp["obj"] = Shapes.AddText(shp["text"])
    EndIf
    x = shp["x"]
    y = shp["y"]
    shp["rx"] = x
    shp["ry"] = y
    If sbd And (shp["func"] = "line") Then
      shp["wx"] = x
      shp["wy"] = y
    ElseIf silverlight And Text.IsSubText("tri|line", shp["func"]) Then
      _alpha = Math.GetRadians(shp["angle"])
      SB_RotateWorkaround()
      shp["wx"] = x
      shp["wy"] = y
    EndIf
    If shp["func"] = "btn" Then
      shp["obj"] = Controls.AddButton(shp["caption"], shX + x * s, shY + y * s)
    Else
      Shapes.Move(shp["obj"], shX + x * s, shY + y * s)
    EndIf
    If Text.IsSubText("rect|ell|tri|text", shp["func"]) And (shp["angle"] <> 0) And (shp["angle"] <> "") Then
      Shapes.Rotate(shp["obj"], shp["angle"])
    EndIf
    shape[i] = shp
  EndFor
  spr["shape"] = shape
  sprite[nSprite] = spr
  y = Stack.PopValue("local")
  x = Stack.PopValue("local")
  i = Stack.PopValue("local")
EndSub
