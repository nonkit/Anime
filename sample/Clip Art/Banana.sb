' Banana
' Copyright Â© 2020 Nonki Takahashi.  The MIT License.
' Using LitDev Extension

GraphicsWindow.Title = "Banana"
SB_Workaround()
scale = 1.5
GraphicsWindow.Width = 300 * scale
GraphicsWindow.Height = 250 * scale
Shapes_Init_Banana()
angle = 0
name = "Banana"
Sprite_Add()

Sub SB_RotateWorkaround
  ' Small Basic | rotate workaround For Silverlight
  ' param shp - current shape
  ' param x, y - original coordinate
  ' param _alpha - angle [radian]
  ' returns x, y - workaround coordinate
  If shp["func"] = "tri" Then
    x1 = -Math.Floor(shp["x3"] / 2)
    y1 = -Math.Floor(shp["y3"] / 2)
  ElseIf shp["func"] = "line" Then
    x1 = -Math.Floor(Math.Abs(shp["x1"] - shp["x2"]) / 2)
    y1 = -Math.Floor(Math.Abs(shp["y1"] - shp["y2"]) / 2)
  EndIf
  ox = x - x1
  oy = y - y1
  x = x1 * Math.Cos(_alpha) - y1 * Math.Sin(_alpha) + ox
  y = x1 * Math.Sin(_alpha) + y1 * Math.Cos(_alpha) + oy
EndSub

Sub SB_Workaround
  ' Small Basic | workaround for Silverlight / SBD
  ' return silverlight - "True" if in remote
  ' return sbd - "True" if Small Basic Desktop
  color = GraphicsWindow.GetPixel(0, 0)
  sbd = "False"
  If Text.GetLength(color) > 7 Then
    silverlight = "True"
    msWait = 300
  Else
    silverlight = "False"
    _gw = GraphicsWindow.Width
    _gh = GraphicsWindow.Height
    If (_gw = 624) And (_gh = 441) Then
      sbd = "True"
    EndIf
  EndIf
EndSub

Sub Shapes_CalcWidthAndHeight
  ' Shapes | calculate total width and height of shapes
  ' param shape[] - shape array
  ' return shWidth, shHeight - total size of shapes
  For i = 1 To Array.GetItemCount(shape)
    shp = shape[i]
    If shp["func"] = "tri" Or shp["func"] = "line" Then
      xmin = shp["x1"]
      xmax = shp["x1"]
      ymin = shp["y1"]
      ymax = shp["y1"]
      If shp["x2"] < xmin Then
        xmin = shp["x2"]
      EndIf
      If xmax < shp["x2"] Then
        xmax = shp["x2"]
      EndIf
      If shp["y2"] < ymin Then
        ymin = shp["y2"]
      EndIf
      If ymax < shp["y2"] Then
        ymax = shp["y2"]
      EndIf
      If shp["func"] = "tri" Then
        If shp["x3"] < xmin Then
          xmin = shp["x3"]
        EndIf
        If xmax < shp["x3"] Then
          xmax = shp["x3"]
        EndIf
        If shp["y3"] < ymin Then
          ymin = shp["y3"]
        EndIf
        If ymax < shp["y3"] Then
          ymax = shp["y3"]
        EndIf
      EndIf
      shp["width"] = xmax - xmin
      shp["height"] = ymax - ymin
    ElseIf shp["func"] = "poly" Then
      pts = LDText.Split(shp["pt"], " ")
      nPts = Array.GetItemCount(pts)
      _pt = LDText.Split(pts[1], ",")
      xmin = _pt[1]
      xmax = _pt[1]
      ymin = _pt[2]
      ymax = _pt[2]
      For iPts = 2 To nPts
        _pt = LDText.Split(pts[1], ",")
        If _pt[1] < xmin Then
          xmin = _pt[1]
        EndIf
        If xmax < _pt[1] Then
          xmax = _pt[1]
        EndIf
        If _pt[2] < ymin Then
          ymin = _pt[2]
        EndIf
        If ymax < _pt[2] Then
          ymax = _pt[2]
        EndIf
      EndFor
      shp["width"] = xmax - xmin
      shp["height"] = ymax - ymin
    EndIf
    If i = 1 Then
      shWidth = shp["x"] + shp["width"]
      shHeight = shp["y"] + shp["height"]
    Else
      If shWidth < shp["x"] + shp["width"] Then
        shWidth = shp["x"] + shp["width"]
      EndIf
      If shHeight < shp["y"] + shp["height"] Then
        shHeight = shp["y"] + shp["height"]
      EndIf
    EndIf
    shape[i] = shp
  EndFor
EndSub

Sub Shapes_Init_Banana
  ' Shapes | initialize sample shapes data
  ' return shX, shY - current position of shapes
  ' return shape - array of shapes
  shX = 0   ' x offset
  shY = 0   ' y offset
  shape = ""
  shape[1] = "func=poly;pt=46.41,68.19 46.41,68.19 46.41,68.19 46.45,68.27 46.58,68.51 46.79,68.89 47.07,69.4 47.43,70.05 47.86,70.8 48.36,71.66 48.92,72.62 49.54,73.66 50.23,74.77 50.97,75.95 51.76,77.19 52.61,78.47 53.5,79.79 54.43,81.13 55.41,82.48 56.42,83.85 57.47,85.2 58.55,86.54 59.66,87.86 59.66,87.86 61.27,89.34 63.79,91.15 67.16,93.24 71.31,95.57 76.15,98.09 81.63,100.77 87.66,103.56 94.18,106.41 101.12,109.29 108.39,112.15 115.94,114.95 123.68,117.64 131.54,120.17 139.46,122.52 147.35,124.63 155.16,126.46 162.8,127.96 170.2,129.1 177.3,129.83 184.01,130.1 184.01,130.1 190.49,130.03 196.91,129.76 203.24,129.32 209.45,128.73 215.51,128.01 221.4,127.19 227.09,126.29 232.55,125.33 237.75,124.34 242.66,123.33 247.26,122.34 251.52,121.39 255.4,120.49 258.88,119.67 261.94,118.96 264.53,118.38 266.65,117.95 268.25,117.69 269.31,117.63 269.8,117.8 269.8,117.8 270.01,118.1 270.24,118.46 270.48,118.87 270.74,119.32 271.01,119.8 271.28,120.31 271.56,120.84 271.84,121.38 272.11,121.94 272.37,122.5 272.62,123.06 272.86,123.61 273.07,124.15 273.27,124.66 273.44,125.15 273.57,125.61 273.68,126.03 273.74,126.41 273.77,126.73 273.75,127 273.75,127 273.74,127.46 273.75,128.34 273.75,129.6 273.69,131.22 273.53,133.15 273.24,135.36 272.77,137.82 272.08,140.49 271.13,143.34 269.88,146.33 268.28,149.43 266.3,152.61 263.89,155.83 261.02,159.05 257.64,162.24 253.71,165.38 249.19,168.41 244.04,171.31 238.21,174.05 231.68,176.59 231.68,176.59 224.28,178.84 215.97,180.73 206.87,182.25 197.11,183.35 186.8,184.03 176.06,184.25 165.01,183.99 153.77,183.23 142.47,181.95 131.21,180.11 120.13,177.7 109.34,174.69 98.96,171.06 89.11,166.79 79.91,161.84 71.48,156.2 63.94,149.84 57.41,142.74 52.01,134.88 47.87,126.22 47.87,126.22 46.96,123.66 46.25,121.25 45.73,118.97 45.37,116.84 45.15,114.85 45.08,113 45.11,111.28 45.25,109.71 45.47,108.26 45.76,106.95 46.1,105.77 46.47,104.72 46.86,103.8 47.26,103 47.63,102.34 47.98,101.79 48.28,101.37 48.51,101.07 48.66,100.9 48.71,100.84 48.71,100.84 48.65,100.71 48.44,100.35 48.12,99.79 47.68,99.03 47.14,98.11 46.49,97.06 45.76,95.88 44.94,94.62 44.05,93.28 43.1,91.9 42.08,90.49 41.02,89.09 39.92,87.71 38.79,86.38 37.63,85.11 36.46,83.95 35.28,82.9 34.1,81.99 32.94,81.24 31.78,80.69 31.78,80.69 30.86,80.3 30.04,79.91 29.32,79.53 28.71,79.15 28.18,78.78 27.74,78.41 27.38,78.04 27.09,77.67 26.87,77.3 26.71,76.94 26.61,76.57 26.55,76.2 26.53,75.83 26.55,75.46 26.6,75.08 26.67,74.71 26.75,74.32 26.85,73.94 26.95,73.54 27.05,73.15 27.05,73.15 27.14,72.74 27.23,72.33 27.31,71.92 27.4,71.49 27.49,71.07 27.59,70.64 27.7,70.2 27.83,69.76 27.98,69.31 28.15,68.86 28.35,68.4 28.57,67.95 28.84,67.48 29.13,67.02 29.47,66.55 29.85,66.08 30.28,65.61 30.77,65.13 31.3,64.66 31.9,64.18 31.9,64.18 32.55,63.71 33.26,63.29 34.02,62.9 34.82,62.55 35.65,62.23 36.49,61.95 37.34,61.7 38.18,61.5 39.02,61.32 39.82,61.19 40.6,61.09 41.33,61.02 42.01,60.99 42.63,61 43.17,61.04 43.63,61.12 43.99,61.23 44.25,61.38 44.4,61.57 44.42,61.79 44.42,61.79 44.4,62.05 44.41,62.35 44.45,62.69 44.52,63.06 44.62,63.46 44.73,63.87 44.86,64.3 45,64.73 45.16,65.16 45.31,65.58 45.47,66 45.63,66.39 45.78,66.77 45.93,67.11 46.06,67.41 46.18,67.68 46.27,67.89 46.35,68.06 46.39,68.16 46.41,68.19 46.41,68.19;pw=3;pc=#000000;bc=#ffe200;"
  shape[2] = "func=poly;pt=46.67,107.84 46.67,107.84 46.67,107.84 46.75,108.11 47.03,108.89 47.55,110.13 48.34,111.8 49.46,113.86 50.93,116.25 52.8,118.94 55.11,121.88 57.91,125.03 61.22,128.36 65.1,131.81 69.58,135.35 74.7,138.92 80.51,142.5 87.05,146.04 94.35,149.49 102.45,152.81 111.41,155.96 121.25,158.9 132.02,161.58 132.02,161.58 141.62,163.58 151.06,165.24 160.31,166.55 169.35,167.53 178.16,168.19 186.73,168.54 195.02,168.59 203.03,168.36 210.72,167.85 218.08,167.08 225.1,166.05 231.74,164.79 237.99,163.29 243.82,161.57 249.23,159.65 254.18,157.52 258.66,155.22 262.65,152.73 266.12,150.08 269.06,147.28 269.06,147.28 268.87,147.68 268.28,148.79 267.21,150.51 265.6,152.75 263.4,155.4 260.54,158.37 256.96,161.55 252.6,164.84 247.39,168.14 241.28,171.35 234.19,174.36 226.08,177.09 216.88,179.42 206.52,181.26 194.95,182.5 182.1,183.04 167.91,182.79 152.32,181.64 135.27,179.49 116.69,176.24 116.69,176.24 115.12,175.87 112.75,175.19 109.68,174.22 106.02,172.93 101.85,171.33 97.27,169.42 92.4,167.2 87.32,164.65 82.14,161.78 76.95,158.58 71.86,155.05 66.96,151.18 62.35,146.98 58.14,142.44 54.42,137.55 51.29,132.32 48.85,126.73 47.2,120.8 46.44,114.5 46.67,107.84 46.67,107.84;pc=Transparent;bc=#dbb515;"
  shape[3] = "func=poly;pt=41.47,62.74 41.47,62.74 41.47,62.74 42.14,63.21 42.89,63.95 43.71,64.92 44.61,66.11 45.57,67.49 46.59,69.02 47.68,70.67 48.81,72.43 50,74.25 51.23,76.11 52.51,77.99 53.83,79.84 55.17,81.65 56.55,83.39 57.96,85.03 59.39,86.53 60.83,87.87 62.29,89.02 63.76,89.95 65.23,90.64 65.23,90.64 66.51,91.18 67.44,91.71 68.03,92.21 68.33,92.7 68.36,93.17 68.15,93.63 67.74,94.07 67.14,94.49 66.4,94.9 65.54,95.3 64.59,95.68 63.59,96.04 62.56,96.4 61.53,96.74 60.54,97.07 59.61,97.38 58.77,97.69 58.06,97.99 57.5,98.27 57.13,98.55 57.13,98.55 56.84,98.84 56.52,99.16 56.16,99.52 55.77,99.89 55.35,100.3 54.91,100.72 54.44,101.16 53.96,101.6 53.47,102.06 52.96,102.52 52.45,102.99 51.93,103.45 51.41,103.9 50.89,104.35 50.38,104.78 49.88,105.19 49.39,105.59 48.91,105.96 48.46,106.3 48.03,106.61 48.03,106.61 47.67,106.81 47.42,106.81 47.26,106.65 47.18,106.32 47.17,105.85 47.21,105.26 47.29,104.55 47.38,103.75 47.49,102.86 47.58,101.91 47.65,100.91 47.69,99.87 47.67,98.81 47.58,97.75 47.42,96.7 47.15,95.67 46.78,94.69 46.27,93.76 45.63,92.91 44.83,92.14 41.47,62.74 41.47,62.74 42.14,63.21 42.89,63.95 43.71,64.92 44.61,66.11 45.57,67.49 46.59,69.02 47.68,70.67 48.81,72.43 50,74.25 51.23,76.11 52.51,77.99 53.83,79.84 55.17,81.65 56.55,83.39 57.96,85.03 59.39,86.53 60.83,87.87 62.29,89.02 63.76,89.95 65.23,90.64 65.23,90.64 66.51,91.18 67.44,91.71 68.03,92.21 68.33,92.7 68.36,93.17 68.15,93.63 67.74,94.07 67.14,94.49 66.4,94.9 65.54,95.3 64.59,95.68 63.59,96.04 62.56,96.4 61.53,96.74 60.54,97.07 59.61,97.38 58.77,97.69 58.06,97.99 57.5,98.27 57.13,98.55 57.13,98.55 56.84,98.84 56.52,99.16 56.16,99.52 55.77,99.89 55.35,100.3 54.91,100.72 54.44,101.16 53.96,101.6 53.47,102.06 52.96,102.52 52.45,102.99 51.93,103.45 51.41,103.9 50.89,104.35 50.38,104.78 49.88,105.19 49.39,105.59 48.91,105.96 48.46,106.3 48.03,106.61 48.03,106.61 47.67,106.81 47.42,106.81 47.26,106.65 47.18,106.32 47.17,105.85 47.21,105.26 47.29,104.55 47.38,103.75 47.49,102.86 47.58,101.91 47.65,100.91 47.69,99.87 47.67,98.81 47.58,97.75 47.42,96.7 47.15,95.67 46.78,94.69 46.27,93.76 45.63,92.91 44.83,92.14 44.83,92.14 43.96,91.41 43.11,90.65 42.28,89.87 41.46,89.08 40.67,88.29 39.89,87.51 39.14,86.74 38.41,86 37.7,85.29 37.01,84.61 36.34,83.98 35.7,83.41 35.08,82.9 34.48,82.46 33.91,82.1 33.36,81.83 32.84,81.65 32.34,81.58 31.87,81.62 31.43,81.77 31.43,81.77 31.08,81.82 30.91,81.54 30.88,80.98 30.99,80.16 31.24,79.14 31.59,77.93 32.05,76.58 32.6,75.13 33.22,73.61 33.91,72.06 34.65,70.51 35.42,69 36.22,67.57 37.04,66.25 37.85,65.08 38.65,64.1 39.43,63.34 40.16,62.83 40.85,62.62 41.47,62.74 41.47,62.74;pc=Transparent;bc=#9cc902;"
  shape[4] = "func=poly;pt=44.22,63.88 44.22,63.88 44.22,63.88 44.19,63.89 44.11,63.93 43.98,63.99 43.81,64.07 43.6,64.17 43.36,64.3 43.1,64.45 42.81,64.62 42.51,64.81 42.2,65.02 41.88,65.25 41.57,65.5 41.26,65.77 40.96,66.06 40.68,66.37 40.42,66.69 40.18,67.04 39.98,67.4 39.82,67.77 39.7,68.16 39.7,68.16 39.66,68.6 39.7,69.1 39.82,69.65 40.02,70.26 40.29,70.9 40.62,71.59 41.01,72.3 41.45,73.03 41.94,73.77 42.46,74.52 43.01,75.27 43.59,76.01 44.18,76.74 44.79,77.44 45.4,78.11 46,78.75 46.61,79.35 47.19,79.89 47.76,80.38 48.29,80.8 48.29,80.8 48.71,81.13 48.91,81.34 48.92,81.46 48.76,81.48 48.44,81.43 47.99,81.3 47.42,81.12 46.76,80.88 46,80.6 45.19,80.3 44.33,79.97 43.44,79.63 42.55,79.29 41.66,78.96 40.8,78.66 39.98,78.38 39.23,78.14 38.56,77.95 37.99,77.82 37.53,77.77 37.53,77.77 37.12,77.76 36.68,77.78 36.2,77.83 35.7,77.9 35.19,77.98 34.66,78.08 34.13,78.19 33.6,78.31 33.07,78.44 32.56,78.57 32.07,78.71 31.6,78.84 31.17,78.96 30.78,79.08 30.42,79.19 30.12,79.29 29.88,79.36 29.69,79.42 29.58,79.46 29.54,79.48 29.54,79.48 29.53,79.48 29.5,79.51 29.45,79.54 29.39,79.58 29.31,79.62 29.22,79.66 29.12,79.7 29,79.72 28.87,79.73 28.74,79.72 28.6,79.69 28.45,79.64 28.3,79.55 28.14,79.43 27.99,79.27 27.83,79.07 27.67,78.82 27.52,78.53 27.37,78.17 27.22,77.76 27.22,77.76 27.09,77.3 27,76.8 26.93,76.27 26.89,75.71 26.88,75.13 26.89,74.54 26.92,73.94 26.98,73.34 27.06,72.75 27.16,72.17 27.27,71.6 27.41,71.05 27.55,70.54 27.72,70.06 27.89,69.62 28.07,69.22 28.27,68.88 28.47,68.6 28.68,68.38 28.89,68.23 28.89,68.23 29.13,68.09 29.4,67.89 29.71,67.63 30.04,67.33 30.4,66.99 30.78,66.61 31.16,66.21 31.55,65.8 31.94,65.38 32.33,64.95 32.7,64.53 33.06,64.12 33.4,63.74 33.71,63.38 33.99,63.05 34.23,62.77 34.42,62.54 34.57,62.36 34.66,62.25 34.69,62.21 34.69,62.21 34.74,62.19 34.89,62.12 35.14,62.01 35.46,61.88 35.85,61.73 36.31,61.57 36.82,61.41 37.37,61.27 37.96,61.14 38.58,61.05 39.21,61 39.85,61 40.5,61.05 41.13,61.17 41.74,61.38 42.33,61.66 42.88,62.05 43.38,62.54 43.83,63.15 44.22,63.88 44.22,63.88;pc=Transparent;bc=#412800;"
  shape[5] = "func=poly;pt=273.16,131.22 266.52,118.45 273.16,131.22 266.52,118.45 266.52,118.45 266.52,118.44 266.51,118.42 266.5,118.38 266.49,118.33 266.48,118.27 266.47,118.2 266.47,118.13 266.48,118.05 266.5,117.97 266.54,117.88 266.59,117.8 266.66,117.72 266.75,117.64 266.86,117.57 266.99,117.51 267.16,117.45 267.35,117.41 267.57,117.38 267.83,117.36 268.12,117.36 268.12,117.36 268.46,117.42 268.86,117.6 269.3,117.87 269.78,118.23 270.29,118.66 270.82,119.15 271.36,119.68 271.91,120.26 272.47,120.86 273.01,121.47 273.54,122.08 274.04,122.68 274.52,123.25 274.95,123.78 275.34,124.27 275.68,124.7 275.95,125.05 276.16,125.32 276.29,125.48 276.33,125.54 276.33,125.54 276.34,125.58 276.35,125.69 276.36,125.87 276.38,126.1 276.39,126.39 276.38,126.71 276.37,127.07 276.34,127.45 276.29,127.86 276.21,128.27 276.1,128.68 275.96,129.09 275.78,129.48 275.56,129.86 275.3,130.2 274.99,130.51 274.62,130.78 274.2,130.99 273.71,131.14 273.16,131.22 273.16,131.22;pc=Transparent;bc=#412800;"
  shape[6] = "func=poly;pt=269.01,129.77 269.01,129.77 269.01,129.77 268.68,130.06 267.71,130.87 266.1,132.13 263.85,133.77 260.96,135.7 257.46,137.86 253.33,140.16 248.58,142.54 243.23,144.91 237.27,147.21 230.72,149.35 223.57,151.26 215.83,152.86 207.51,154.09 198.61,154.86 189.13,155.1 179.1,154.73 168.49,153.68 157.34,151.88 145.63,149.24 145.63,149.24 134.2,146.14 123.84,143.03 114.51,139.92 106.13,136.83 98.67,133.78 92.08,130.78 86.29,127.87 81.26,125.05 76.93,122.35 73.25,119.78 70.17,117.37 67.64,115.13 65.61,113.09 64.01,111.25 62.81,109.64 61.94,108.29 61.35,107.2 61,106.4 60.83,105.9 60.78,105.73 60.78,105.73 60.82,105.68 60.95,105.52 61.16,105.27 61.43,104.95 61.76,104.56 62.15,104.11 62.59,103.62 63.06,103.1 63.56,102.56 64.09,102.02 64.64,101.48 65.19,100.96 65.74,100.46 66.29,100.01 66.82,99.61 67.34,99.28 67.82,99.02 68.27,98.85 68.67,98.79 69.03,98.83 69.03,98.83 69.81,99.21 71.46,100.1 73.91,101.43 77.11,103.16 80.98,105.23 85.47,107.57 90.51,110.14 96.03,112.88 101.97,115.72 108.27,118.61 114.87,121.5 121.69,124.33 128.69,127.03 135.78,129.57 142.91,131.86 150.02,133.87 157.04,135.53 163.9,136.79 170.55,137.58 176.92,137.86 176.92,137.86 183.58,137.76 190.1,137.48 196.46,137.02 202.64,136.43 208.62,135.7 214.38,134.87 219.91,133.95 225.18,132.97 230.19,131.93 234.89,130.87 239.29,129.8 243.36,128.75 247.08,127.72 250.44,126.75 253.41,125.85 255.97,125.04 258.12,124.34 259.82,123.77 261.06,123.36 261.83,123.11 261.83,123.11 262.35,123 262.89,122.99 263.43,123.06 263.97,123.2 264.51,123.41 265.03,123.68 265.55,124.01 266.05,124.38 266.53,124.8 266.98,125.24 267.4,125.71 267.78,126.19 268.12,126.69 268.42,127.18 268.67,127.67 268.86,128.15 269,128.6 269.07,129.03 269.07,129.42 269.01,129.77 269.01,129.77;pc=Transparent;bc=#66fff186;"
  shape[7] = "func=poly;pt=263.96,140.83 263.96,140.83 263.96,140.83 263.92,140.84 263.87,140.85 263.81,140.85 263.73,140.84 263.65,140.82 263.56,140.8 263.47,140.78 263.37,140.75 263.28,140.73 263.18,140.7 263.08,140.67 262.99,140.64 262.9,140.61 262.82,140.58 262.75,140.55 262.69,140.53 262.64,140.51 262.6,140.49 262.57,140.49 262.56,140.48 262.56,140.48 262.57,140.47 262.58,140.42 262.61,140.35 262.64,140.25 262.68,140.14 262.72,140.01 262.78,139.87 262.83,139.72 262.9,139.56 262.97,139.41 263.04,139.26 263.11,139.11 263.19,138.97 263.27,138.85 263.35,138.75 263.43,138.66 263.51,138.61 263.59,138.58 263.67,138.58 263.75,138.61 263.75,138.61 263.82,138.68 263.9,138.76 263.97,138.85 264.04,138.96 264.1,139.07 264.16,139.2 264.21,139.33 264.25,139.46 264.29,139.6 264.32,139.74 264.34,139.88 264.35,140.02 264.35,140.15 264.34,140.28 264.31,140.4 264.27,140.51 264.22,140.61 264.15,140.7 264.07,140.77 263.96,140.83 263.96,140.83;pc=Transparent;bc=#412800;"
  shape[8] = "func=poly;pt=254.68,146.03 254.68,146.03 254.68,146.03 254.64,146.01 254.6,145.97 254.55,145.92 254.51,145.87 254.46,145.8 254.4,145.73 254.35,145.65 254.3,145.57 254.25,145.48 254.19,145.4 254.14,145.31 254.1,145.23 254.05,145.15 254.01,145.08 253.98,145.01 253.95,144.95 253.92,144.9 253.9,144.87 253.89,144.84 253.88,144.84 253.88,144.84 253.9,144.83 253.94,144.81 254,144.78 254.09,144.74 254.19,144.69 254.31,144.64 254.44,144.58 254.58,144.53 254.72,144.47 254.87,144.42 255.02,144.37 255.17,144.32 255.31,144.29 255.45,144.26 255.57,144.25 255.69,144.25 255.78,144.27 255.86,144.31 255.92,144.36 255.95,144.44 255.95,144.44 255.96,144.53 255.97,144.63 255.96,144.74 255.94,144.86 255.91,144.98 255.87,145.1 255.83,145.22 255.78,145.34 255.71,145.45 255.65,145.56 255.57,145.67 255.49,145.76 255.4,145.85 255.31,145.92 255.21,145.98 255.11,146.03 255.01,146.06 254.9,146.07 254.79,146.06 254.68,146.03 254.68,146.03;pc=Transparent;bc=#412800;"
  shape[9] = "func=poly;pt=122,120.75 122,120.75 122,120.75 122.02,120.72 122.06,120.7 122.1,120.67 122.16,120.65 122.22,120.62 122.29,120.59 122.36,120.57 122.44,120.54 122.52,120.52 122.6,120.5 122.67,120.48 122.75,120.46 122.82,120.44 122.89,120.42 122.95,120.41 123,120.39 123.05,120.38 123.08,120.38 123.1,120.37 123.11,120.37 123.11,120.37 123.11,120.38 123.12,120.42 123.13,120.48 123.14,120.55 123.16,120.64 123.18,120.75 123.19,120.86 123.21,120.98 123.23,121.11 123.24,121.24 123.25,121.37 123.25,121.5 123.25,121.62 123.24,121.73 123.23,121.84 123.2,121.93 123.17,122 123.12,122.05 123.07,122.09 123,122.1 123,122.1 122.92,122.09 122.84,122.07 122.76,122.04 122.67,122 122.58,121.95 122.49,121.9 122.41,121.83 122.32,121.77 122.24,121.69 122.17,121.62 122.1,121.53 122.04,121.45 121.99,121.36 121.95,121.27 121.92,121.18 121.91,121.09 121.9,121.01 121.92,120.92 121.95,120.83 122,120.75 122,120.75;pc=Transparent;bc=#412800;"
  shape[10] = "func=poly;pt=262.86,148.19 262.86,148.19 262.86,148.19 262.78,148.22 262.68,148.23 262.58,148.22 262.48,148.18 262.37,148.13 262.26,148.05 262.15,147.96 262.05,147.86 261.95,147.75 261.85,147.63 261.77,147.5 261.7,147.36 261.63,147.23 261.58,147.09 261.55,146.95 261.54,146.81 261.54,146.68 261.57,146.55 261.62,146.44 261.69,146.33 261.69,146.33 261.78,146.23 261.87,146.13 261.95,146.02 262.04,145.92 262.13,145.82 262.21,145.72 262.3,145.63 262.38,145.54 262.46,145.46 262.54,145.38 262.63,145.31 262.71,145.24 262.78,145.19 262.86,145.14 262.94,145.11 263.01,145.09 263.09,145.08 263.16,145.09 263.23,145.11 263.3,145.14 263.3,145.14 263.37,145.2 263.43,145.28 263.5,145.38 263.55,145.5 263.61,145.64 263.65,145.78 263.69,145.95 263.72,146.12 263.74,146.3 263.75,146.48 263.74,146.67 263.72,146.86 263.68,147.05 263.62,147.24 263.55,147.42 263.46,147.6 263.34,147.77 263.21,147.92 263.05,148.06 262.86,148.19 262.86,148.19;pc=Transparent;bc=#412800;"
  shape[11] = "func=poly;pt=59.98,131.41 59.98,131.41 59.98,131.41 59.87,131.44 59.75,131.45 59.63,131.45 59.5,131.44 59.37,131.41 59.24,131.37 59.12,131.31 58.99,131.25 58.88,131.18 58.78,131.1 58.68,131.02 58.6,130.93 58.53,130.84 58.49,130.74 58.46,130.65 58.45,130.55 58.47,130.46 58.51,130.37 58.58,130.29 58.68,130.21 58.68,130.21 58.8,130.13 58.91,130.05 59.03,129.97 59.15,129.89 59.26,129.81 59.37,129.74 59.49,129.67 59.6,129.6 59.71,129.53 59.81,129.47 59.92,129.41 60.02,129.36 60.13,129.32 60.22,129.28 60.32,129.25 60.42,129.23 60.51,129.22 60.6,129.22 60.68,129.23 60.77,129.24 60.77,129.24 60.85,129.28 60.92,129.33 60.99,129.39 61.05,129.47 61.11,129.56 61.15,129.66 61.19,129.77 61.21,129.89 61.22,130.02 61.21,130.15 61.19,130.28 61.14,130.41 61.08,130.55 61,130.69 60.89,130.82 60.76,130.95 60.61,131.07 60.43,131.19 60.22,131.31 59.98,131.41 59.98,131.41;pc=Transparent;bc=#412800;"
  shape[12] = "func=poly;pt=118.83,121.59 118.83,121.59 118.83,121.59 118.76,121.61 118.69,121.62 118.62,121.61 118.54,121.58 118.46,121.55 118.38,121.5 118.3,121.44 118.22,121.37 118.15,121.29 118.08,121.21 118.02,121.12 117.96,121.03 117.92,120.93 117.88,120.84 117.86,120.74 117.85,120.65 117.85,120.56 117.87,120.47 117.91,120.39 117.97,120.32 117.97,120.32 118.04,120.24 118.1,120.17 118.17,120.1 118.23,120.03 118.3,119.96 118.36,119.89 118.43,119.83 118.49,119.76 118.55,119.7 118.62,119.65 118.68,119.6 118.74,119.56 118.8,119.52 118.86,119.49 118.91,119.47 118.97,119.45 119.02,119.44 119.08,119.45 119.13,119.46 119.18,119.48 119.18,119.48 119.23,119.52 119.28,119.58 119.33,119.65 119.37,119.73 119.41,119.82 119.44,119.92 119.47,120.03 119.49,120.15 119.5,120.28 119.51,120.4 119.5,120.53 119.48,120.67 119.45,120.8 119.41,120.93 119.35,121.05 119.28,121.18 119.19,121.29 119.09,121.4 118.97,121.5 118.83,121.59 118.83,121.59;pc=Transparent;bc=#412800;"
  shape[13] = "func=poly;pt=216.82,134.88 216.82,134.88 216.82,134.88 216.81,134.93 216.78,134.98 216.74,135.03 216.69,135.08 216.63,135.11 216.57,135.15 216.49,135.18 216.41,135.2 216.33,135.22 216.24,135.23 216.15,135.23 216.07,135.23 215.99,135.22 215.91,135.2 215.83,135.18 215.76,135.14 215.7,135.1 215.65,135.05 215.62,134.99 215.59,134.92 215.59,134.92 215.57,134.84 215.55,134.77 215.53,134.69 215.51,134.62 215.49,134.54 215.48,134.47 215.46,134.4 215.44,134.33 215.43,134.26 215.42,134.19 215.41,134.13 215.41,134.07 215.41,134.01 215.42,133.96 215.42,133.91 215.44,133.86 215.46,133.82 215.48,133.79 215.52,133.76 215.55,133.73 215.55,133.73 215.6,133.72 215.66,133.7 215.72,133.7 215.8,133.71 215.88,133.72 215.96,133.74 216.05,133.77 216.14,133.81 216.23,133.85 216.31,133.91 216.4,133.97 216.48,134.04 216.55,134.11 216.62,134.2 216.68,134.29 216.74,134.39 216.78,134.5 216.8,134.62 216.82,134.74 216.82,134.88 216.82,134.88;pc=Transparent;bc=#412800;"
  shape[14] = "func=poly;pt=125.39,162.06 125.39,162.06 125.39,162.06 125.37,162.03 125.3,161.96 125.19,161.84 125.05,161.69 124.87,161.51 124.67,161.31 124.43,161.09 124.17,160.86 123.89,160.62 123.6,160.4 123.28,160.18 122.96,159.97 122.63,159.79 122.3,159.64 121.97,159.53 121.64,159.45 121.31,159.43 120.99,159.46 120.69,159.55 120.4,159.71 120.4,159.71 120.11,159.89 119.82,160.02 119.51,160.12 119.2,160.18 118.88,160.21 118.56,160.22 118.25,160.2 117.94,160.16 117.64,160.11 117.36,160.04 117.08,159.96 116.82,159.87 116.59,159.79 116.37,159.7 116.18,159.62 116.02,159.54 115.89,159.48 115.79,159.43 115.73,159.39 115.71,159.38 115.71,159.38 115.72,159.34 115.76,159.22 115.82,159.03 115.9,158.78 116,158.49 116.11,158.15 116.24,157.79 116.39,157.42 116.55,157.03 116.72,156.65 116.9,156.29 117.09,155.95 117.29,155.64 117.49,155.38 117.69,155.17 117.9,155.03 118.11,154.96 118.31,154.98 118.51,155.1 118.71,155.32 118.71,155.32 118.96,155.62 119.29,155.93 119.69,156.26 120.16,156.6 120.68,156.95 121.25,157.3 121.84,157.66 122.47,158.01 123.1,158.36 123.73,158.7 124.35,159.02 124.96,159.33 125.53,159.61 126.06,159.87 126.53,160.1 126.95,160.3 127.29,160.46 127.54,160.57 127.71,160.65 127.76,160.67 127.76,160.67;pc=Transparent;bc=#412800;"
  shape[15] = "func=poly;pt=113.24,156.66 113.24,156.66 113.24,156.66 113.22,156.64 113.17,156.57 113.08,156.47 112.96,156.33 112.8,156.17 112.62,155.99 112.42,155.79 112.19,155.58 111.94,155.37 111.66,155.16 111.37,154.95 111.06,154.76 110.74,154.58 110.41,154.43 110.06,154.31 109.71,154.22 109.35,154.17 108.98,154.17 108.62,154.21 108.25,154.31 108.25,154.31 107.91,154.46 107.6,154.64 107.33,154.84 107.1,155.06 106.91,155.29 106.74,155.54 106.6,155.8 106.49,156.07 106.4,156.33 106.34,156.6 106.29,156.85 106.25,157.1 106.23,157.33 106.23,157.54 106.22,157.73 106.23,157.9 106.24,158.03 106.25,158.13 106.25,158.2 106.26,158.22 106.26,158.22;pc=Transparent;bc=#412800;"
EndSub

Sub Sprite_Add
  ' Sprite | add shapes to a sprite
  ' param name - sprite name
  ' param shX, shY - origin of shape array
  ' param scale - to resize 
  ' param shape[] - shape array
  ' param nSprite - number of sprite
  ' return nSprite - updated number of sprite
  ' return sprite[] - sprite array
  Stack.PushValue("local", i)
  Stack.PushValue("local", x)
  Stack.PushValue("local", y)
  nSprite = nSprite + 1
  spr = ""
  spr["name"] = name
  spr["x"] = shX
  spr["y"] = shY
  spr["angle"] = 0
  spr["dir"] = 1
  Shapes_CalcWidthAndHeight()
  spr["width"] = shWidth
  spr["height"] = shHeight
  spr["cx"] = shWidth / 2
  spr["cy"] = shHeight / 2
  s = scale
  spr["scale"] = s
  For i = 1 To Array.GetItemCount(shape)
    shp = shape[i]
    GraphicsWindow.PenWidth = shp["pw"] * s
    If shp["pw"] > 0 Then
      GraphicsWindow.PenColor = shp["pc"]
    EndIf
    If Text.IsSubText("rect|ell|tri|poly|text|btn", shp["func"]) Then
      GraphicsWindow.BrushColor = shp["bc"]
    EndIf
    If Text.IsSubText("text|btn", shp["func"]) Then
      If silverlight Then
        fs = Math.Floor(shp["fs"] * 0.9)
      Else
        fs = shp["fs"]
      EndIf
      GraphicsWindow.FontSize = fs * s
      GraphicsWindow.FontName = shp["fn"]
      If shp["fb"] = "False" Then
        GraphicsWindow.FontBold = "False"
      Else
        GraphicsWindow.FontBold = "True"
      EndIf
    EndIf
    If shp["func"] = "rect" Then
      shp["obj"] = Shapes.AddRectangle(shp["width"] * s, shp["height"] * s)
    ElseIf shp["func"] = "ell" Then
      shp["obj"] = Shapes.AddEllipse(shp["width"] * s, shp["height"] * s)
    ElseIf shp["func"] = "tri" Then
      shp["obj"] = Shapes.AddTriangle(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s, shp["x3"] * s, shp["y3"] * s)
    ElseIf shp["func"] = "poly" Then
      pts = LDText.Split(shp["pt"], " ")
      nPts = Array.GetItemCount(pts)
      Sprite_ScalePoints()
      shp["obj"] = LDShapes.AddPolygon(points)
    ElseIf shp["func"] = "line" Then
      shp["obj"] = Shapes.AddLine(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s)
    ElseIf shp["func"] = "text" Then
      shp["obj"] = Shapes.AddText(shp["text"])
    EndIf
    x = shp["x"]
    y = shp["y"]
    shp["rx"] = x
    shp["ry"] = y
    If sbd And (shp["func"] = "line") Then
      shp["wx"] = x
      shp["wy"] = y
    ElseIf silverlight And Text.IsSubText("tri|line", shp["func"]) Then
      _alpha = Math.GetRadians(shp["angle"])
      SB_RotateWorkaround()
      shp["wx"] = x
      shp["wy"] = y
    EndIf
    If shp["func"] = "btn" Then
      shp["obj"] = Controls.AddButton(shp["caption"], shX + x * s, shY + y * s)
    Else
      Shapes.Move(shp["obj"], shX + x * s, shY + y * s)
    EndIf
    If Text.IsSubText("rect|ell|tri|poly|text", shp["func"]) And (shp["angle"] <> 0) And (shp["angle"] <> "") Then
      Shapes.Rotate(shp["obj"], shp["angle"])
    EndIf
    shape[i] = shp
  EndFor
  spr["shape"] = shape
  sprite[nSprite] = spr
  y = Stack.PopValue("local")
  x = Stack.PopValue("local")
  i = Stack.PopValue("local")
EndSub

Sub Sprite_ScalePoints
  ' param pts[] - array of points
  ' param nPts - number of points
  ' param s - scale
  ' return points[] - array of scaled points
  points = ""
  pt = ""
  For iPts = 1 To nPts
    _pt = LDText.Split(pts[iPts], ",")
    pt[1] = Math.Round(_pt[1] * s * 100) / 100
    pt[2] = Math.Round(_pt[2] * s * 100) / 100
    points[iPts] = pt
  EndFor
EndSub
