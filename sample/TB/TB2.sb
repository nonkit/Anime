' 2012/09/23 1:10:39 Generated
' by Shapes 1.31
' Program ID QPN385

' initialize shapes
Shapes_Init()
' add shapes
scale = 1
Shapes_Add()
angle = 0

Sub Shapes_Init
  ' Shapes | Initialize shapes data
  ' return shX, shY - current position of shapes
  ' return shape - array of shapes
  shX = 174 ' x offset
  shY = 99 ' y offset
  shape = ""
  shape[1] = "func=tri;x=54;y=240;x1=19;y1=0;x2=0;y2=35;x3=39;y3=35;bc=#670A0A;pc=#000000;pw=2;"
  shape[2] = "func=tri;x=199;y=238;x1=19;y1=0;x2=0;y2=35;x3=39;y3=35;bc=#670A0A;pc=#000000;pw=2;"
  shape[3] = "func=rect;x=53;y=276;width=42;height=23;bc=#670A0A;pc=#000000;pw=2;"
  shape[4] = "func=rect;x=198;y=273;width=41;height=24;bc=#670A0A;pc=#000000;pw=2;"
  shape[5] = "func=rect;x=62;y=188;width=21;height=72;bc=#1A321A;pc=#000000;pw=2;"
  shape[6] = "func=rect;x=209;y=186;width=21;height=73;bc=#1A321A;pc=#000000;pw=2;"
  shape[7] = "func=ell;x=74;y=0;width=145;height=246;bc=#1A321A;pc=#000000;pw=2;"
  shape[8] = "func=rect;x=56;y=218;width=180;height=35;bc=#1A321A;pc=#000000;pw=2;"
  shape[9] = "func=rect;x=0;y=94;width=82;height=33;angle=13;bc=#1A321A;pc=#000000;pw=2;"
  shape[10] = "func=rect;x=215;y=93;width=78;height=30;angle=342;bc=#1A321A;pc=#000000;pw=2;"
  shape[11] = "func=rect;x=59;y=71;width=28;height=126;bc=#1A321A;pc=#000000;pw=2;"
  shape[12] = "func=rect;x=206;y=71;width=29;height=127;bc=#1A321A;pc=#000000;pw=2;"
  shape[13] = "func=line;x=61;y=81;x1=173;y1=0;x2=0;y2=0;pc=#CCBB5C;pw=16;"
  shape[14] = "func=ell;x=117;y=12;width=58;height=52;bc=#000000;pw=0;"
  shape[15] = "func=ell;x=125;y=20;width=43;height=41;bc=#1A321A;pw=0;"
  shape[16] = "func=rect;x=109;y=37;width=74;height=28;bc=#1A321A;pw=0;"
  shape[17] = "func=rect;x=95;y=90;width=101;height=112;bc=#1A321A;pc=#000000;pw=2;"
EndSub

Sub Shapes_Add
  ' Shapes | Add shapes as shapes data
  ' param shape - array of shapes
  ' param scale - to zoom
  ' return nShapes - number of shapes
  ' return shAngle - current angle of shapes
  Stack.PushValue("local", i)
  Stack.PushValue("local", x)
  Stack.PushValue("local", y)
  nShapes = Array.GetItemCount(shape)
  s = scale
  For i = 1 To nShapes
    GraphicsWindow.PenWidth = shape[i]["pw"] * s
    If shape[i]["pw"] > 0 Then
      GraphicsWindow.PenColor = shape[i]["pc"]
    EndIf
    If shape[i]["func"] = "rect" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      width = shape[i]["width"]
      height = shape[i]["height"]
      shape[i]["obj"] = Shapes.AddRectangle(width * s, height * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "ell" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      width = shape[i]["width"]
      height = shape[i]["height"]
      shape[i]["obj"] = Shapes.AddEllipse(width * s, height * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "tri" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      x1 = shape[i]["x1"]
      y1 = shape[i]["y1"]
      x2 = shape[i]["x2"]
      y2 = shape[i]["y2"]
      x3 = shape[i]["x3"]
      y3 = shape[i]["y3"]
      shape[i]["obj"] = Shapes.AddTriangle(x1 * s, y1 * s, x2 * s, y2 * s, x3 * s, y3 * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "line" Then
      x = shape[i]["x"]
      y = shape[i]["y"]
      x1 = shape[i]["x1"]
      y1 = shape[i]["y1"]
      x2 = shape[i]["x2"]
      y2 = shape[i]["y2"]
      shape[i]["obj"] = Shapes.AddLine(x1 * s, y1 * s, x2 * s, y2 * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
    EndIf
    shape[i]["rx"] = x
    shape[i]["ry"] = y
  EndFor
  shAngle = 0
  y = Stack.PopValue("local")
  x = Stack.PopValue("local")
  i = Stack.PopValue("local")
EndSub
